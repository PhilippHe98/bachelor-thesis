name: Java CI with Gradle
on:
  push:
    branches: [ "main" ]
  
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # build the spring boot jvm versions
  build-and-push-jvm-versions:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - project-dir: spring-boot/spring-boot-base
            dockerfile: Dockerfile
            imagename: spring-boot-base
            
          - project-dir: spring-boot/spring-boot-cds
            dockerfile: Dockerfile
            imagename: spring-boot-cds
            
          - project-dir: spring-boot/spring-boot-crac
            dockerfile: Dockerfile
            imagename: spring-boot-crac
            
          - project-dir: spring-boot/spring-boot-aot
            dockerfile: Dockerfile
            imagename: spring-boot-aot
            
          - project-dir: micronaut/micronaut-base
            dockerfile: Dockerfile
            imagename: micronaut-base
            
          - project-dir: micronaut/micronaut-cds
            dockerfile: Dockerfile
            imagename: micronaut-cds
            
          - project-dir: micronaut/micronaut-crac
            dockerfile: Dockerfile
            imagename: micronaut-crac

          - project-dir: micronaut/micronaut-aot
            dockerfile: Dockerfile
            imagename: micronaut-aot
            
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'liberica'
    - name: Build Project
      run:  |
        cd ${{ matrix.project-dir }}
        ./gradlew build
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.imagename }}
    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      with:
        context: ./${{ matrix.project-dir }}
        file: ./${{ matrix.project-dir }}/${{ matrix.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  build-and-push-native:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - project-dir: micronaut/micronaut-aot
            dockerfile: Dockerfile-native
            imagename: micronaut-base-native
            
          - project-dir: spring-boot/spring-boot-native
            dockerfile: Dockerfile
            imagename: spring-boot-native
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.imagename }}
      - name: Build and push native Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.project-dir }}
          file: ./${{ matrix.project-dir }}/${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
